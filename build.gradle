buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE")
    classpath("io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE")
  }
}

plugins {
  id "org.asciidoctor.convert" version "1.5.2"
}

ext {
  springSecurityVersion = "4.0.2.RELEASE"
  generatedDocumentation = file('build/generated-snippets')
}

apply plugin: "idea"
apply plugin: "java"
apply plugin: "spring-boot"
apply plugin: "io.spring.dependency-management"

jar {
  baseName = "spring-rest-black-market"
  dependsOn asciidoctor
  from ("${asciidoctor.outputDir}/html5") {
    into "static/docs"
  }
}

copy {
  from "etc/hack/java"
  into "src/main/java"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
  maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
  // For domain modeling + Spring Data JPA.
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  compile("org.hsqldb:hsqldb")
  compile("org.projectlombok:lombok:1.16.6")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

  // Spring Data REST.
  compile("org.springframework.boot:spring-boot-starter-data-rest")

  // Spring Security.
  compile("org.springframework.boot:spring-boot-starter-security")
  compile("org.springframework.security:spring-security-data:$springSecurityVersion")
  compile("org.springframework.security:spring-security-web:$springSecurityVersion")
  compile("org.springframework.security:spring-security-config:$springSecurityVersion")

  // Initial test dependencies.
  testCompile("org.springframework.boot:spring-boot-starter-test")
  testCompile("junit:junit:4.12")
  testCompile("com.jayway.jsonpath:json-path:2.0.0")
  testCompile("org.springframework.restdocs:spring-restdocs:1.0.0.BUILD-SNAPSHOT")
}

test {
  systemProperty 'org.springframework.restdocs.outputDir', generatedDocumentation
  outputs.dir generatedDocumentation
}

asciidoctor {
  attributes 'generated': generatedDocumentation
  inputs.dir generatedDocumentation
  dependsOn test
  onlyIf {
    project.hasProperty("genDoc")
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = "2.9"
}
